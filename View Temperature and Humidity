#include "LiquidCrystal_I2C.h"
#include "DHTesp.h"
#include "ezButton.h"

#define I2C_ADDR    0x27
#define LCD_COLUMNS 16
#define LCD_LINES   2
const int DHT_PIN = 15;

// Create the objects for the DHT sensor, LCD & Button based on the libraries
DHTesp dhtSensor;
LiquidCrystal_I2C lcd(I2C_ADDR, LCD_COLUMNS, LCD_LINES);
ezButton viewTempHumBTN(4);  

// Control class for the ViewTempHum use case
class ViewTempHumController {
  TempAndHumidity  currentTempHum;
 
  public:
  ViewTempHumController(){}
 
  void displayCurrentTempHum(){
    // Read the current temperature and humidity
    currentTempHum = dhtSensor.getTempAndHumidity();

    // Call function to test if the temperature & humidity is valid
    // If valid display the temperature & humidity
    // If not valid display error message
    if (validateTempHum()){
      Serial.println("Temp: " + String(currentTempHum.temperature, 2) + "Â°C");
      Serial.println("Humidity: " + String(currentTempHum.humidity, 1) + "%");
      Serial.println("---");
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Temp: " + String(currentTempHum.temperature, 2) +char(223) + "C");
      lcd.setCursor(0,1);
      lcd.print("Humidity: " + String(currentTempHum.humidity, 1) + "%");
    }
    else {
      lcd.clear();
      lcd.setCursor(0,0);
      lcd.print("Temp sensor err");
    }
  }

  // Validate that the temperature & humidity is valid
  // If not valid return false for error.
  bool validateTempHum(){
      if (isnan(currentTempHum.temperature) || isnan(currentTempHum.humidity)) {
        Serial.println(F("Failed to read from DHT sensor!"));
        return false;
        }
      else
        return true;
    }
};

// Controller object for the View Temp Hum use case.
ViewTempHumController viewTempHumControl;  

void setup() {
  Serial.begin(115200);
  Serial.println("Meat drying system");
  lcd.init();
  lcd.backlight();
  dhtSensor.setup(DHT_PIN, DHTesp::DHT22);

  // Print initial message to console, short delay and clear LCD
  lcd.setCursor(0, 0);
  lcd.print("Starting System");
  delay(500);
  lcd.clear();
 
  //Display selection prompt
  lcd.setCursor(0, 0);
  lcd.print("Select function");

}

// The loop plays the role of the event dispatcher.
// As things happen in the system functions are called and returned to the main loop.
void loop() {
  // Use the viewTempHumBTN
  // MUST call the loop() function first as directed by the library
  viewTempHumBTN.loop();

  // Testing if the View Temperature & Humidity button was pressed
  // Call the function to display the temperature & humidity once the button was pressed
  if(viewTempHumBTN.isPressed()){
    viewTempHumControl.displayCurrentTempHum();
  }
}

JSON FILE for the code on the WOKWI Simulator where the lcd, button and sensor liabraries are going to be included in order for the code to work successfully:
{
  "version": 1,
  "author": "Tlaleng Keswa",
  "editor": "wokwi",
  "parts": [
    {
      "type": "wokwi-text",
      "id": "text1",
      "top": 269.6,
      "left": 150.92,
      "attrs": { "text": "Heater" }
    },
    { "type": "wokwi-breadboard-half", "id": "bb1", "top": 6.6, "left": 22, "attrs": {} },
    {
      "type": "wokwi-esp32-devkit-v1",
      "id": "esp",
      "top": -15.03,
      "left": -224.87,
      "rotate": 90,
      "attrs": {}
    },
    {
      "type": "wokwi-dht22",
      "id": "dht1",
      "top": 19.5,
      "left": 282.6,
      "attrs": { "temperature": "12.4" }
    },
    {
      "type": "wokwi-lcd1602",
      "id": "lcd1",
      "top": -216.93,
      "left": 80.92,
      "attrs": { "pins": "i2c" }
    },
    { "type": "wokwi-potentiometer", "id": "pot1", "top": 56.3, "left": 19, "attrs": {} },
    { "type": "wokwi-relay-module", "id": "relay1", "top": 293.59, "left": 94.67, "attrs": {} },
    { "type": "wokwi-vcc", "id": "vcc1", "top": 254.85, "left": 227.61, "attrs": {} },
    { "type": "wokwi-gnd", "id": "gnd1", "top": 330.07, "left": 261.8, "attrs": {} },
    {
      "type": "wokwi-led",
      "id": "led1",
      "top": 268.97,
      "left": 246.36,
      "attrs": { "color": "green", "flip": "1" }
    },
    { "type": "wokwi-relay-module", "id": "relay2", "top": 393.89, "left": 95.87, "attrs": {} },
    {
      "type": "wokwi-text",
      "id": "text2",
      "top": 369.61,
      "left": 170.1,
      "attrs": { "text": "Fan" }
    },
    { "type": "wokwi-vcc", "id": "vcc2", "top": 379.9, "left": 236.5, "attrs": {} },
    { "type": "wokwi-gnd", "id": "gnd2", "top": 460.64, "left": 283.32, "attrs": {} },
    {
      "type": "wokwi-led",
      "id": "led2",
      "top": 392.14,
      "left": 269.14,
      "attrs": { "color": "green", "flip": "1" }
    },
    {
      "type": "wokwi-pushbutton",
      "id": "btn1",
      "top": 86.3,
      "left": 147.5,
      "rotate": 90,
      "attrs": { "color": "green", "bounce": "0" }
    },
    {
      "type": "wokwi-text",
      "id": "text3",
      "top": -246.5,
      "left": 93.52,
      "attrs": { "text": "LCD" }
    },
    { "type": "wokwi-slide-switch", "id": "sw1", "top": 100.4, "left": 108.7, "attrs": {} },
    {
      "type": "wokwi-text",
      "id": "text4",
      "top": 22.72,
      "left": 104.63,
      "attrs": { "text": "Door \nread \nswitch" }
    },
    {
      "type": "wokwi-text",
      "id": "text5",
      "top": 29.87,
      "left": 154.77,
      "attrs": { "text": "View temp &\n Humidity\n" }
    }
  ],
  "connections": [
    [ "esp:TX0", "$serialMonitor:RX", "", [] ],
    [ "esp:RX0", "$serialMonitor:TX", "", [] ],
    [ "esp:D22", "lcd1:SCL", "green", [ "v17", "h97.19", "v-339.16" ] ],
    [ "esp:D21", "lcd1:SDA", "blue", [ "v8.81", "h111.08", "v-340.47" ] ],
    [ "pot1:GND", "bb1:bn.1", "black", [ "v0" ] ],
    [ "pot1:VCC", "bb1:bp.3", "red", [ "v0" ] ],
    [ "bb1:bp.2", "esp:3V3", "red", [ "v-0.63", "h-291.81", "v-54.5" ] ],
    [ "esp:GND.1", "bb1:bn.1", "black", [ "h0.08", "v39.22" ] ],
    [ "pot1:SIG", "bb1:3b.i", "green", [ "v0" ] ],
    [ "dht1:SDA", "bb1:28b.h", "green", [ "v0" ] ],
    [ "esp:D34", "bb1:3b.j", "gold", [ "v-28.57", "h66.49", "v152.77" ] ],
    [ "lcd1:GND", "esp:GND.2", "black", [ "h0" ] ],
    [ "vcc1:VCC", "relay1:COM", "red", [ "v0" ] ],
    [ "led1:C", "gnd1:GND", "green", [ "v0" ] ],
    [ "led2:C", "gnd2:GND", "green", [ "h-0.44", "v26.5" ] ],
    [ "vcc2:VCC", "relay2:COM", "red", [ "v0" ] ],
    [ "bb1:14b.i", "esp:D4", "green", [ "v18.97", "h-358.98" ] ],
    [ "relay1:VCC", "bb1:bp.4", "red", [ "h0" ] ],
    [ "relay2:VCC", "relay1:VCC", "red", [ "h-11.35", "v-100.16" ] ],
    [ "relay2:GND", "relay1:GND", "black", [ "h-19.98", "v-100.29" ] ],
    [ "bb1:bn.3", "relay1:GND", "black", [ "v0" ] ],
    [ "relay1:IN", "esp:D19", "green", [ "h0" ] ],
    [ "relay2:IN", "esp:D18", "green", [ "h0" ] ],
    [ "bb1:9b.h", "bb1:bn.7", "black", [ "v0" ] ],
    [ "bb1:10b.j", "esp:D2", "green", [ "v17.25", "h-333.48" ] ],
    [ "relay2:NO", "led2:A", "green", [ "h0" ] ],
    [ "relay1:NO", "led1:A", "green", [ "h0" ] ],
    [ "bb1:bn.13", "bb1:16b.i", "black", [ "v0" ] ],
    [ "dht1:VCC", "bb1:27b.g", "", [ "$bb" ] ],
    [ "dht1:SDA", "bb1:28b.g", "", [ "$bb" ] ],
    [ "dht1:NC", "bb1:29b.g", "", [ "$bb" ] ],
    [ "dht1:GND", "bb1:30b.g", "", [ "$bb" ] ],
    [ "pot1:GND", "bb1:1b.f", "", [ "$bb" ] ],
    [ "pot1:SIG", "bb1:2b.f", "", [ "$bb" ] ],
    [ "pot1:VCC", "bb1:3b.f", "", [ "$bb" ] ],
    [ "btn1:1.l", "bb1:16t.c", "", [ "$bb" ] ],
    [ "btn1:2.l", "bb1:14t.c", "", [ "$bb" ] ],
    [ "btn1:1.r", "bb1:16b.h", "", [ "$bb" ] ],
    [ "btn1:2.r", "bb1:14b.h", "", [ "$bb" ] ],
    [ "sw1:1", "bb1:8b.g", "", [ "$bb" ] ],
    [ "sw1:2", "bb1:9b.g", "", [ "$bb" ] ],
    [ "sw1:3", "bb1:10b.g", "", [ "$bb" ] ],
    [ "bb1:27b.h", "bb1:bp.22", "red", [ "v0" ] ],
    [ "bb1:bn.25", "bb1:30b.h", "black", [ "h2.18", "v-58.9" ] ],
    [ "bb1:28b.i", "esp:D15", "green", [ "v58.94", "h-512.44" ] ]
  ],
  "dependencies": {}
}

 
